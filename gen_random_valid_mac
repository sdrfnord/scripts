#!/bin/bash
# @author sdrfnord
# @license GPLv3+
# Generate random but valid mac address for certain vendors.

link_type="$1"
## https://en.wikipedia.org/wiki/List_of_networking_hardware_vendors
if [ "$link_type" == "wlan" ]
then
    vendors='(IntelCor)'
elif [ "$link_type" == "lan" ] || [ -z "$link_type" ]
then
    vendors='(IntelCor|HewlettP|Fujitsu)'
else
    vendors="($link_type)"
fi

wireshark_manuf_file="/usr/share/wireshark/manuf"
ethers_file="$HOME/.wireshark/ethers"

## MAC address generation {{{
if [ ! -r "$wireshark_manuf_file" ]
then
    wireshark_manuf_file="$(locate --regexp 'wireshark/manuf$' --limit 1)"
    if [ ! -r "$wireshark_manuf_file" ]
    then
        echo "manuf file not found." 1>&2
        exit 1
    fi
fi

rand_mac_line="$(grep --invert-match '^#' "$wireshark_manuf_file" | \
    grep --extended-regexp --ignore-case "\s${vendors}\s" \
    | shuf -n 1)"

rand_mac_manf_part=${rand_mac_line:0:8}
rand_mac_random_part="`openssl rand -hex 3 | sed 's/\(..\)/\1:/g; s/.$//'`"
rand_mac="${rand_mac_manf_part}:${rand_mac_random_part}"
## }}}

## Check if the MAC address is already known. {{{
if [ ! -r "$ethers_file" ] && [ -r "/etc/ethers" ]
then
    ethers_file="/etc/ethers"
fi

if [ -r "$ethers_file" ]
then
    if grep --ignore-case "$rand_mac" "$ethers_file"
    then
        echo "MAC ($rand_mac) is already known!!! See ${ethers_file}." 2>&1
        exit 1
    fi
fi
## }}}

echo "Manufacture which uses this MAC address: ${rand_mac_line}."
echo "Random MAC: ${rand_mac^^}"
